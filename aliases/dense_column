#!/usr/bin/env bash

dense_column()
{
    local line=0
    local max_line_width=0
    local max_width=$(tput cols)
    local total_lines=0
    local max_columns=0
    local column_number=0
    local line_number=0
    local remaining_line=0
    local min_axes=0
    local line_length=0
    local line_bytes=0
    local buffer=""

    buffer="$(mktemp)"

    while read -r line
    do
        echo "$line" >> "$buffer"
        total_lines=$((total_lines + 1))
        line_length="$(sed -E 's/\x1B\[[0-9;]*[mK]//g' <<< "$line" | wc -c)"
        [[ "${line_length}" -gt "$max_line_width" ]] && max_line_width="${line_length}" && line_bytes=${#line}
    done

    max_line_width=$((max_line_width + 4))
    line_bytes=$((line_bytes + 4))
    max_columns=$((max_width / max_line_width))
    [[ $((total_lines % max_columns)) -gt 0 ]] && remaining_line=1
    max_lines=$((total_lines / max_columns + remaining_line))

    for line_number in $(seq 1 $max_lines)
    do
        for column_number in $(seq $line_number $max_lines $total_lines)
        do
            line="$(sed -n "$((column_number))p" "$buffer")"
            printf "%-$((line_bytes))s" "$line"
        done
        echo
    done

    rm "$buffer"
}
