#!/usr/bin/env bash

declare -a available_maintainers
declare -A update_report

for maintainer in clang cmake doxygen gcc ninja node plantuml
do
    maintainer="${maintainer}-maintenance"
    if command -v $maintainer &>/dev/null
    then
        available_maintainers+=( "$maintainer" )
    fi
done

declare -a selected_maintainers

select maintainer in all "${available_maintainers[@]}"
do
    selected_maintainers+=( "$maintainer" )
done

if grep -q all <<< "${selected_maintainers[*]}"
then
    selected_maintainers=( "${available_maintainers[@]}" )
fi

for maintainer in "${selected_maintainers[@]}"
do
    for package in "$(${maintainer%-*} --version | grep -oE '\w+?\s?(version)?\s?\w+\.\w+\.\w+' | head -n1 | tr '[:upper:]' '[:lower:]')"
    do
        update_report["${maintainer}"]="${package##* }"
    done

    echo -e "\033[1;33m${maintainer%-*}\033[0m"
    "$maintainer"

    for package in "$(${maintainer%-*} --version | grep -oE '\w+?\s?(version)?\s?\w+\.\w+\.\w+' | head -n1 | tr '[:upper:]' '[:lower:]')"
    do
        if [ "${update_report["${maintainer}"]}" == "${package##* }" ]
        then
            update_report["${maintainer}"]="${package##* } is already latest version"
        else
            update_report["${maintainer}"]+=" => ${package##* }"
        fi
    done
done

echo -e "\n\033[1;35mUpdate Report Summary\033[0m"
for package in "${!update_report[@]}"
do
    echo -e "\033[1;33m${package%-*}: \033[1;32m${update_report[$package]}\033[0m"
done | nl
